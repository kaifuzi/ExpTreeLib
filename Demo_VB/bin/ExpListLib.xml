<?xml version="1.0"?>
<doc>
<assembly>
<name>
ExpListLib
</name>
</assembly>
<members>
<member name="T:ExpListLib.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:ExpListLib.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:ExpListLib.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:ExpListLib.ExpList">
 <summary>
 This Form is a fully working start point for any form which requires an ExplorerTree and
 ListView with enough room left for application specific controls.
 </summary>
 <remarks>
 <para>This template form illustrates the use of:
 <list type="bullet">
 <item><description>Use of the ExpTreeNodeSelected Event Handler.</description></item>
 <item><description>Use of LVColSorter for column sorting. See MakeLviItem for a custom ListViewItem 
 builder which is compatible with and useful for LVColSorter. 
 See Also SortLVItems for how to perform a Refresh of the 
 ListView in response to a Refresh command from the Context Menu.</description></item>
 <item><description>Full Context Menus in the ListView.</description></item>
 <item><description>ListViewItem editing (first SubItem only) if the ListViewItem.Tag is a CShItem.</description></item>
 <item><description>Handling of dynamic update Events from CShItemUpdate Events.</description></item>
 <item><description>Proper handling of the Delete Key.</description></item>
 <item><description>Shows how to handle a DoubleClick on a ListViewItem.</description></item>
 </list>
 </para></remarks>
</member>
<member name="P:ExpListLib.ExpList.ViewType">
 <summary></summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ExpListLib.ExpList.CurrentPath">
 <summary></summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ExpListLib.ExpList.CurrentCSI">
 <summary></summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ExpListLib.ExpList.InvokeUpdate">
 <summary>
 To receive notification of changes to the FileSystem which may affect the GUI display, declare
 DeskTopItem WithEvents. Changes to CShItem's internal tree which are caused by notification of 
 FileSystem changes or by periodic refresh of the contents of the internal tree raise CShItemUpdate
 events.  Since the periodic refresh runs on a different thread, while Windows Notify messages run on
 the main thread, it is required that we check to see if an Invoke is required or not.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ExpListLib.ExpList.SelectedItem">
 <summary>
 Returns the last CShItem Selected.
 </summary>
 <remarks>Not currently used.</remarks>
</member>
<member name="M:ExpListLib.ExpList.UpdateInvoke(System.Object,ExpTreeLib.ShellItemUpdateEventArgs)">
 <summary>
 Determines if DoItemUpdate should be called directly or via Invoke, and then calls it.
 </summary>
 <param name="sender">The CShItem of the Folder of the changed item.</param>
 <param name="e">Contains information about the type of change and items affected.</param>
 <remarks>Responds to events raised by either WM_Notify messages or FileWatch.</remarks>
</member>
<member name="M:ExpListLib.ExpList.DoItemUpdate(System.Object,ExpTreeLib.ShellItemUpdateEventArgs)">
 <summary>
 Makes changes in ExpFileList GUI in response to updating events raised by CShItem.
 </summary>
 <param name="sender">The CShItem of the Folder of the changed item.</param>
 <param name="e">Contains information about the type of change and items affected.</param>
 <remarks>Responds to events raised by either WM_Notify messages or FileWatch (FileWatch not
 implemented in this Form).</remarks>
</member>
<member name="M:ExpListLib.ExpList.InsertLvi(System.Windows.Forms.ListViewItem,System.Windows.Forms.ListView)">
 <summary>
 Given a ListViewItem with a  CShItem in its' Tag, and a ListView whose Items all have a CShItem in
 their Tags, Insert the ListViewItem in its' proper place in the ListView.
 </summary>
 <param name="lvi">The ListViewItem to be inserted.</param>
 <param name="LV">The ListView into which the ListViewItem is to be inserted.</param>
 <remarks>6/11/2012 - better than a Sort when the list is in order.<br />
          Will honor any prior Column Sorts.</remarks>
</member>
<member name="M:ExpListLib.ExpList.ExpFileList_BeforeLabelEdit(System.Object,System.Windows.Forms.LabelEditEventArgs)">
 <summary>
 Handles Before Item Rename for ExpFileList
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks>Modified version of Calum McLellan's code from ExpList.</remarks>
</member>
<member name="M:ExpListLib.ExpList.ExpFileList_AfterLabelEdit(System.Object,System.Windows.Forms.LabelEditEventArgs)">
 <summary>
 Handles After Item Rename for ExpFileList
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks>Modified version of Calum McLellan's code from ExpList.</remarks>
</member>
<member name="M:ExpListLib.ExpList.SortLVItems">
 <summary>
 Sort the ListViewItems based on the CShItems stored in the .Tag of each ListViewItem.
 </summary>
 <remarks>Cannot use LVColSorter for this since we do not know current state
 </remarks>
</member>
<member name="F:ExpListLib.ExpList.m_OutOfRange">
 <summary>
 m_OutOfRange is set to True on ExpFileList.MouseLeave (which happens under many circumstances) to prevent
 the non-ListViewItem specific menu from firing. See Remarks
 m_OutOfRange is set to False (allowing ContextMenus in ExpFileList), only on ExpFileList.MouseDown when the Right
 button is pressed. MouseDown only occurs when the Mouse is really over ExpFileList.
 </summary>
 <remarks>
If you hold down the right mouse button, then leave ExpFileList,
 then let go of the mouse button, the MouseUp event is fired upon
 re-entering the ExpFileList - meaning that the Windows ContextMenu will
 be shown if we don't use this flag (from Calum)
</remarks>
</member>
<member name="M:ExpListLib.ExpList.ExpFileList_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
 <summary>
 Handles RightButton Click to display a System Context Menu
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks>Modified version of Calum McLellan's code from ExpList.</remarks>
</member>
<member name="M:ExpListLib.ExpList.WndProc(System.Windows.Forms.Message@)">
 <summary>
 Handles Windows Messages having to do with the display of Cascading menus of the Context Menu.
 </summary>
 <param name="m">The Windows Message</param>
</member>
<member name="M:ExpListLib.ExpList.ExpList_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
 <summary>
 Handles Delete Key processing for the ListView
 </summary>
 <param name="sender">object that raised the event</param>
 <param name="e">a KeyEventsArgs</param>
 <remarks>Modified version of Calum McLellan's code from ExpList.</remarks>
</member>
</members>
</doc>
